import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score

df = pd.read_csv('HousingData.csv')
df

"checking for any NA values!!"
df.isna().any()
df.isnull().sum()

col = ['CRIM','ZN','INDUS','CHAS','AGE','LSTAT']
for i in col:
    df[i].fillna(df[i].mean(),inplace=True)

df.isnull().sum()
df.head()

x = df.drop(['MEDV'],axis='columns')
y = df['MEDV']

"training the dataset!"
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2, random_state=30)

from sklearn.ensemble import RandomForestRegressor

rf_model = RandomForestRegressor(n_estimators=100, random_state=30)
rf_model.fit(x_train, y_train)
rf_model.score(x_test,y_test)

y_predicted = rf_model.predict(x_test)
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

mse = mean_squared_error(y_test, y_predicted)
mae = mean_absolute_error(y_test, y_predicted)
r2 = r2_score(y_test, y_predicted)

print(f'Mean Squared Error (MSE): {mse}')
print(f'Mean Absolute Error (MAE): {mae}')
print(f'R-squared (RÂ²): {r2}')


